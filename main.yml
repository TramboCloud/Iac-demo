Description: >
    Sample CloudFormation Template

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    InstanceType:
        Description: Which instance type should we use to build the ECS cluster?
        Type: String
        Default: "t2.micro"
        AllowedValues:
          - "t2.micro"
          - "t2.small"
          - "t2.medium"
          - "t2.large"
          - "m5.large"

    KeyPair:
        Description: Amazon EC2 Key Pair
        Type: "AWS::EC2::KeyPair::KeyName"

    MinSize:
        Type: Number
        Description: Minimum number of ECS Instances in the ASG
        Default: 1

    MaxSize:
        Type: Number
        Description: Maximum number of EC2 Instances in the ASG
        Default: 1

    Desired:
        Type: Number
        Description: Desired dumber of EC2 Instances in the ASG cannot be less than MinSize
        Default: 1

    DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 1

    Path:
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /*

    ServiceMemory:
        Description: How much memory to allocate Lead service
        Type: String

    ServicePort:
        Description: Port that Lead service exposes
        Type: String

    DockerRepository:
        Description: Docker image to run in the cluster
        Type: String

    ImageTag:
        Description: The tag to be used
        Type: String
        Default: latest

    BucketName:
        Description: The bucket where cloudformation templates are stored
        Type: String

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/vpc-generic.yml
            Parameters:
                EnvironmentName: !Sub ${EnvironmentName}

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/security-groups.yml
            Parameters:
                EnvironmentName: !Sub ${EnvironmentName}
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/loadbalancer.yml
            Parameters:
                EnvironmentName: !Sub ${EnvironmentName}
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroups: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
      Type: AWS::CloudFormation::Stack
      Properties:
          TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/ecs-cluster.yml
          Parameters:
              EnvironmentName: !Sub ${EnvironmentName}
              InstanceType: !Ref InstanceType
              VPC: !GetAtt VPC.Outputs.VPC
              Subnets: !GetAtt VPC.Outputs.PrivateSubnets
              SecurityGroups: !GetAtt SecurityGroups.Outputs.InstanceSecurityGroup
              KeyPair: !Ref KeyPair
              MinSize: !Ref MinSize
              MaxSize: !Ref MaxSize
              Desired: !Ref Desired
      DependsOn: ALB

    Service:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/service/service.yml
            Parameters:
                DockerRepository: !Ref DockerRepository
                ImageTag: !Ref ImageTag
                HttpListener: !GetAtt ALB.Outputs.HttpListener
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: !Ref DesiredCount
                ServiceMemory: !Ref ServiceMemory
                Path: !Ref Path
                ServicePort: !Ref ServicePort
        DependsOn: ECS
