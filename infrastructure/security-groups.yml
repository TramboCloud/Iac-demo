Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

Resources:

    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of ECS
            SecurityGroupIngress:
                - CidrIp: 0.0.0.0/0
                  IpProtocol: -1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-LoadBalancer-SG

    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: !Sub ${EnvironmentName}-ECS-SG
            VpcId: !Ref VPC
            GroupDescription: Access to the ECS instances
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ECS-SG

    SGBaseIngress:
      Type: 'AWS::EC2::SecurityGroupIngress'
      Properties:
        GroupId: !Ref InstanceSecurityGroup
        IpProtocol: -1
        SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup

Outputs:

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for the load balancer
        Value: !Ref LoadBalancerSecurityGroup

    InstanceSecurityGroup:
        Description: A reference to the security group for ECS instances
        Value: !Ref InstanceSecurityGroup
